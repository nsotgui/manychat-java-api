plugins {
    id 'java'
    id 'maven-publish'
    id "com.jfrog.bintray" version "1.8.4"
    id "com.github.spotbugs" version "2.0.0"
    id "com.github.breadmoirai.github-release" version "2.2.9"
}

group 'io.github.nsotgui'
version '0.0.5'

sourceCompatibility = 1.8

dependencies {
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.9'
    compile group: 'org.springframework', name: 'spring-web', version: '5.1.7.RELEASE'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.26'


    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.28.2'
    testCompile group: 'org.springframework', name: 'spring-test', version: '5.1.7.RELEASE'
}

// To generate an HTML report instead of XML
tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports.xml.enabled = false
    reports.html.enabled = true
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')

    publications = ['mavenJava']

    dryRun = false
    publish = true

    pkg {
        repo = 'manychat-java-api'
        name = 'manychat-api'
        websiteUrl = 'https://github.com/nsotgui/manychat-java-api'
        issueTrackerUrl = 'https://github.com/nsotgui/manychat-java-api/issues'
        vcsUrl = 'https://github.com/nsotgui/manychat-java-api.git'
        licenses = ['Apache-2.0']
        labels = ['manychat', 'java', 'api']

        githubRepo = 'nsotgui/manychat-java-api'
        githubReleaseNotesFile = 'README.md'
    }
}

githubRelease {
    token System.getenv('GITHUB_API_KEY').toString()
    owner 'nsotgui'
    repo 'manychat-java-api'
    body "Release version: v${project.version}"
    releaseAssets jar, sourcesJar
}

task createReleaseTag(type: Exec) {
    def tagName = "v${project.version}"
    commandLine 'git', 'tag', "$tagName"
}

task pushTag(type: Exec, dependsOn: createReleaseTag) {
    commandLine 'git', 'push', '--tags'
}